version: '3.8'
services:
  database:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: freelance
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bestie


  liquibase-migrations-auth:
    image: liquibase/liquibase:4.18
    depends_on:
      database:
        condition: service_started
    command:
      - --hub-mode=off
      - --changelog-file=master-auth.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://database:5432/freelance-users
      - --username=admin
      - --password=123
      - update
    volumes:
      - ./migrations:/liquibase/changelog
    networks:
      - bestie

  liquibase-migrations-worker:
    image: liquibase/liquibase:4.18
    depends_on:
      database:
        condition: service_started
      liquibase-migrations-auth:
        condition: service_started
    command:
      - --hub-mode=off
      - --changelog-file=master-worker.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://database:5432/freelance-worker
      - --username=admin
      - --password=123
      - update
    volumes:
      - ./migrations:/liquibase/changelog
    networks:
      - bestie

  liquibase-migrations-order:
    image: liquibase/liquibase:4.18
    depends_on:
      database:
        condition: service_started
      liquibase-migrations-worker:
        condition: service_started
    command:
      - --hub-mode=off
      - --changelog-file=master-order.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://database:5432/freelance-order
      - --username=admin
      - --password=123
      - update
    volumes:
      - ./migrations:/liquibase/changelog
    networks:
      - bestie

  config-server:
    build:
      context: .
      dockerfile: ./config-server/Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    depends_on:
      - database
      - liquibase-migrations-order
    networks:
      bestie:
        aliases:
          - "config-server"

  eureka-server:
    build:
      context: .
      dockerfile: ./eureka-server/Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_started
    networks:
      bestie:
        aliases:
          - "eureka-server"

  gateway-server:
    build:
      context: .
      dockerfile: ./gateway-server/Dockerfile
    container_name: gateway-server
    ports:
      - "8088:8088"
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
    networks:
      bestie:
        aliases:
          - "gateway-server"

  admin-service:
    build:
      context: .
      dockerfile: ./admin-service/Dockerfile
    container_name: admin-service
    ports:
      - "8087:8087"
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      gateway-server:
        condition: service_started
    networks:
      bestie:
        aliases:
          - "admin-service"

  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
    container_name: auth-service
    ports:
      - "8086:8086"
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      gateway-server:
        condition: service_started
      admin-service:
        condition: service_started
    networks:
      bestie:
        aliases:
          - "auth-service"

  worker-service:
    build:
      context: .
      dockerfile: ./worker-service/Dockerfile
    container_name: worker-service
    ports:
      - "8085:8085"
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      gateway-server:
        condition: service_started
      auth-service:
        condition: service_started
    networks:
      bestie:
        aliases:
          - "worker-service"
  order-service:
    build:
      context: .
      dockerfile: ./order-service/Dockerfile
    container_name: order-service
    ports:
      - "8089:8089"
    depends_on:
      config-server:
        condition: service_started
      eureka-server:
        condition: service_started
      gateway-server:
        condition: service_started
      auth-service:
        condition: service_started
    networks:
      bestie:
        aliases:
          - "order-service"

volumes:
  postgres_data:

networks:
  bestie:
    driver: bridge

